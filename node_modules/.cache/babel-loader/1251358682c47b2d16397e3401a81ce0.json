{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16462\\\\Desktop\\\\react-cards-pokemon\\\\src\\\\PlayingCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { formatCard } from \"./helpers\";\nimport useAxios from \"./hooks/useAxios\";\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardTable() {\n  _s();\n\n  // const [cards, setCards] = useState([]);\n  // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n  const [cards, addCard, clearCards] = useAxios(\"cards\", \"https://deckofcardsapi.com/api/deck/new/draw/\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addCard(formatCard),\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCards,\n        children: \"Clear the table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.cards[0]\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardTable, \"xgxw6ica9M3KL0xHzHBy3Wxvb+M=\", false, function () {\n  return [useAxios];\n});\n\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","uuid","axios","PlayingCard","formatCard","useAxios","CardTable","cards","addCard","clearCards","map","cardData","id","defaultProps"],"sources":["C:/Users/16462/Desktop/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport { formatCard } from \"./helpers\";\n\nimport useAxios from \"./hooks/useAxios\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  // const [cards, setCards] = useState([]);\n  // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n\n  const [cards, addCard, clearCards] = useAxios(\n    \"cards\",\n    \"https://deckofcardsapi.com/api/deck/new/draw/\",\n    \n  );\n\n \n\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n      <button onClick={() => addCard(formatCard)}>Add a playing card!</button>\n        <button onClick={clearCards}>Clear the table</button>\n\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(cardData => (\n          <PlayingCard key={cardData.id} front={cardData.cards[0]} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAEA;AACA;;;;AACA,SAASC,SAAT,GAAqB;EAAA;;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,KAAD,EAAQC,OAAR,EAAiBC,UAAjB,IAA+BJ,QAAQ,CAC3C,OAD2C,EAE3C,+CAF2C,CAA7C;EAQA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACA;QAAQ,OAAO,EAAE,MAAMG,OAAO,CAACJ,UAAD,CAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEE;QAAQ,OAAO,EAAEK,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE;MAAK,SAAS,EAAC,2BAAf;MAAA,UACGF,KAAK,CAACG,GAAN,CAAUC,QAAQ,iBACjB,QAAC,WAAD;QAA+B,KAAK,EAAEA,QAAQ,CAACJ,KAAT,CAAe,CAAf;MAAtC,GAAkBI,QAAQ,CAACC,EAA3B;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAhCQN,S;UAS8BD,Q;;;KAT9BC,S;AAkCTA,SAAS,CAACO,YAAV,GAAyB,EAAzB;AAEA,eAAeP,SAAf"},"metadata":{},"sourceType":"module"}