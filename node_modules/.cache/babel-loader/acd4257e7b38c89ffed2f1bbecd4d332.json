{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\n\nfunction useAxios(keyInLS, baseUrl) {\n  const addResponseData = async function () {\n    let formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data => data;\n    let restOfUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses(data => [...data, formatter(response.data)]);\n  };\n\n  const clearResponses = () => setResponses([]);\n\n  return [addResponseData, clearResponses];\n}\n\nexport default useAxios;","map":{"version":3,"names":["React","useState","useEffect","useAxios","keyInLS","baseUrl","addResponseData","formatter","data","restOfUrl","response","axios","get","setResponses","clearResponses"],"sources":["C:/Users/16462/Desktop/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\n\r\n\r\n\r\nfunction useAxios(keyInLS, baseUrl) {\r\n  \r\n    const addResponseData = async (formatter = data => data, restOfUrl = \"\") => {\r\n      const response = await axios.get(`${baseUrl}${restOfUrl}`);\r\n      setResponses(data => [...data, formatter(response.data)]);\r\n    };\r\n  \r\n    const clearResponses = () => setResponses([]);\r\n  \r\n    return [ addResponseData, clearResponses];\r\n  }\r\n\r\nexport default useAxios;"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;AAIA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;EAEhC,MAAMC,eAAe,GAAG,kBAAoD;IAAA,IAA7CC,SAA6C,uEAAjCC,IAAI,IAAIA,IAAyB;IAAA,IAAnBC,SAAmB,uEAAP,EAAO;IAC1E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEP,OAAQ,GAAEI,SAAU,EAAjC,CAAvB;IACAI,YAAY,CAACL,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUD,SAAS,CAACG,QAAQ,CAACF,IAAV,CAAnB,CAAT,CAAZ;EACD,CAHD;;EAKA,MAAMM,cAAc,GAAG,MAAMD,YAAY,CAAC,EAAD,CAAzC;;EAEA,OAAO,CAAEP,eAAF,EAAmBQ,cAAnB,CAAP;AACD;;AAEH,eAAeX,QAAf"},"metadata":{},"sourceType":"module"}